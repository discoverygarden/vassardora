<?php

/**
 * @file
 * Hook implementations for Vassar.
 */

define('VASSADORA_FULLTEXT_PATH', 'vassadora/bookreader_fulltext');

/**
 * Implements hook_preprocess_HOOK().
 *
 * Adds in some JS overrides.
 */
function vassadora_preprocess_islandora_internet_archive_bookreader(array &$variables) {
  $mod_path = drupal_get_path('module', 'vassadora');
  drupal_add_js("$mod_path/js/bookreader_overrides.js", array(
    'weight' => 5,
  ));
  drupal_add_css("$mod_path/css/bookreader.css");
  drupal_add_js(array(
      'vassadora' => array(
        'text_url' => url(VASSADORA_FULLTEXT_PATH),
      ),
    ), array(
      'type' => 'setting',
    )
  );
}

/**
 * Implements hook_menu().
 */
function vassadora_menu() {
  $items = array();

  $items[VASSADORA_FULLTEXT_PATH] = array(
    'title' => 'Vassadora Fulltext Alternative Callback',
    'page callback' => 'vassadora_fulltext_page_callback',
    'access callback' => 'vassadora_fulltext_access_callback',
    'access arguments' => array(),
    'type' => MENU_CALLBACK,
  );

  $items['admin/islandora/vassadora'] = array(
    'title' => 'Vassadora Config',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vassadora_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type'=> MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Access callback.
 */
function vassadora_fulltext_access_callback() {
  $to_return = FALSE;

  if (isset($_GET['pids'])) {
    $pids = (array) $_GET['pids'];
    foreach ($pids as $pid) {
      $object = islandora_object_load($pid);
      if ($object) {
        $to_return = islandora_user_access($object, array(FEDORA_VIEW_OBJECTS));

        if (!$to_return) {
          // If anything returns FALSE, return it...
          break;
        }
      }
    }
  }

  return $to_return;
}

/**
 * Page callback to render the fulltext as desired.
 */
function vassadora_fulltext_page_callback() {
  // Get the datastream IDs from which we'll try to get the language variants.
  $english_dsid = variable_get('vassadora_english_fulltext_datastream', 'TRANSCRIPTION_ENG');
  $german_dsid = variable_get('vassadora_german_fulltext_datastream', 'TRANSCRIPTION_GER');

  $output = '';
  $pids = (array) $_GET['pids'];
  $num_pids = count($pids);
  if ($num_pids == 2) {
    // Render two-page view.
    $objects = array_filter(array_map('islandora_object_load', $pids));
    list($left_object, $right_object) = $objects;

    $pages = array(
      'english' => array(
        'label' => t('English'),
        'sections' => array(
          array(
            'label' => t('Left'),
            'text' => vassadora_load_fulltext($left_object, $english_dsid),
          ),
          array(
            'label' => t('Right'),
            'text' => vassadora_load_fulltext($right_object, $english_dsid),
          ),
        ),
      ),
      'german' => array(
        'label' => t('German'),
        'sections' => array(
          array(
            'label' => t('Left'),
            'text' => vassadora_load_fulltext($left_object, $german_dsid),
          ),
          array(
            'label' => t('Right'),
            'text' => vassadora_load_fulltext($right_object, $german_dsid),
          ),
        ),
      ),
      'ocr' => array(
        'label' => t('OCR'),
        'sections' => array(
          array(
            'label' => t('Left'),
            'text' => vassadora_load_fulltext($left_object, 'OCR'),
          ),
          array(
            'label' => t('Right'),
            'text' => vassadora_load_fulltext($right_object, 'OCR'),
          ),
        ),
      ),
    );

    $output = theme('vassadora_fulltext', array(
      'pids' => $pids,
      'objects' => $objects,
      'pages' => $pages,
    ));
  }
  elseif ($num_pids == 1) {
    // Render one-page view.
    $object = islandora_object_load(reset($pids));

    $pages = array(
      'english' => array(
        'label' => t('English'),
        'sections' => array(
          array(
            'label' => $object->label,
            'text' => vassadora_load_fulltext($object, $english_dsid),
          ),
        ),
      ),
      'german' => array(
        'label' => t('German'),
        'sections' => array(
          array(
            'label' => $object->label,
            'text' => vassadora_load_fulltext($object, $german_dsid),
          ),
        ),
      ),
    );

    // Kinda gross, but we only want to add the side-by-side if we have text
    // in both languages.
    if ($pages['english']['sections'][0]['text'] && $pages['german']['sections'][0]['text']) {
      $pages['full_text'] = array(
        'label' => t('Side-by-side'),
        'sections' => array(
          array(
            'label' => t('English'),
            'text' => $pages['english']['sections'][0]['text'],
          ),
          array(
            'label' => t('German'),
            'text' => $pages['german']['sections'][0]['text'],
          ),
        ),
      );
    }

    // Add in a page for the base OCR...
    $pages['ocr'] = array(
      'label' => t('OCR'),
      'sections' => array(
        array(
          'label' => $object->label,
          'text' => vassadora_load_fulltext($object, 'OCR'),
        ),
      ),
    );

    $output = theme('vassadora_fulltext', array(
      'pids' => $pids,
      'objects' => array($object),
      'pages' => $pages,
    ));
  }
  else {
    // Throw a 400 error of some kind.
    drupal_not_found();
  }
  echo $output;
  drupal_exit();
}

/**
 * Implements hook_theme().
 */
function vassadora_theme() {
  $items = array();

  $items['vassadora_fulltext'] = array(
    'file' => 'theme/theme.inc',
    'variables' => array(
      'pids' => NULL,
      'pages' => array(),
    ),
    'template' => 'theme/vassadora-multiple-fulltexts',
  );

  return $items;
}

/**
 * Get the a fulltext representation for the current stream.
 *
 * @param AbstractObject $object
 *   The object from which we want to get fulltext.
 * @param string $datastream_id
 *   The datastream from which to attempt to grab fulltext.
 *
 * @return string|bool
 *   A string containing the fulltext, or FALSE if there was none to get.
 */
function vassadora_load_fulltext(AbstractObject $object, $datastream_id) {
  if (isset($object[$datastream_id])) {
    return $object[$datastream_id]->content;
  }

  return FALSE;
}
